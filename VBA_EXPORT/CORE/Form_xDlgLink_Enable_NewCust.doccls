Option Compare Database
Option Explicit

Const ModuleName As String = "xDlgLink_Enable_NewCust"
Private CompanyCodeStr As String

Private Sub cmdCancel_Click()
    mdlEnable.ReturnValue = 0
    mdlEnable.SeedDate = Empty
    mdlEnable.SeedLevel = 0
    mdlEnable.DoReseed = False
    mdlEnable.Mode = 0
    Me.Visible = False
End Sub

Private Sub cmdOK_Click()
    Dim Msg As String
    Dim cCode As String
    Dim v As Variant
    
    On Error GoTo PROC_ERR
    
    cCode = mdlCompany.GetCompanyCode
        
    Dim Results As Integer
    'ASSERT SEED DATE
    If Nz(Me.txtSeedDate, 0) = 0 Then
        Msg = "A valid 'Requested for DateTime' must be given." & vbCrLf & _
              "(Required.)."
        Results = MsgBox(Msg, VbMsgBoxStyle.vbOKOnly Or VbMsgBoxStyle.vbExclamation Or VbMsgBoxStyle.vbDefaultButton1, _
                         cCode & " Error - No seed date")
        Exit Sub
    End If
    If IsDate(Me.txtSeedDate) = False Then
        Msg = "An illegal date was entered for the 'Requested for DateTime'." & vbCrLf & _
              "(Required.)."
        Results = MsgBox(Msg, VbMsgBoxStyle.vbOKOnly Or VbMsgBoxStyle.vbExclamation Or VbMsgBoxStyle.vbDefaultButton1, _
                         cCode & " Error - Bad seed date")
        Exit Sub
    End If
    
    If DatePart("h", Me.txtSeedDate) = 0 Then
        Msg = "Please include a time for the seed date." & vbCrLf & _
              "(Required.)."
        Results = MsgBox(Msg, VbMsgBoxStyle.vbOKOnly Or VbMsgBoxStyle.vbExclamation Or VbMsgBoxStyle.vbDefaultButton1, _
                         cCode & " Error - No time given.")
        Exit Sub
    End If
    

    'ASSERT SeedLevel
    If Nz(Me.txtSeedLevel, 0) = 0 Then
        Msg = "A valid seed level number must be given." & vbCrLf & _
              "(Required.)."
        Results = MsgBox(Msg, VbMsgBoxStyle.vbOKOnly Or VbMsgBoxStyle.vbExclamation Or VbMsgBoxStyle.vbDefaultButton1, _
                         cCode & " Error - No seed level")
        Exit Sub
    End If
    
    If (Me.txtSeedLevel = 0 Or Me.txtSeedLevel > mdlCompany.GetGlobalDefNumOfLevels) Then
        Msg = "The seed numer is zero or greater than the 'Global NumofLevels'." & vbCrLf & _
              "(Required.)."
        Results = MsgBox(Msg, VbMsgBoxStyle.vbOKOnly Or VbMsgBoxStyle.vbExclamation Or VbMsgBoxStyle.vbDefaultButton1, _
                         cCode & " Error - Illegal seed level")
        Exit Sub
    End If
    
    mdlEnable.ReturnValue = 1
    mdlEnable.SeedDate = Me.txtSeedDate
    mdlEnable.SeedLevel = Me.txtSeedLevel
    ' NEW CUSTOMERS - RESEED ALWAYS SET TO TRUE
    mdlEnable.DoReseed = True
    ' user enters SeedDate and SeedLevel
    mdlEnable.Mode = 1
    
    Me.Visible = False
    
    
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error 2101, 3270,
    If err.Number <> 0 Then
        '        Msg = ModuleName & " cmdOK_Click" & vbCrLf & _
        '              "Error # " & cstr(Err.Number) & " was generated by " & Err.Source & vbCrLf & Err.Description
        '        MsgBox Msg, , "Error", Err.HelpFile, Err.HelpContext
    End If
    Resume PROC_EXIT
    
End Sub



Private Sub cmdSetDate_Click()
Dim v As Variant
    v = mdlDateTime.InputDate("Enter Inspection Requested for Date", Me.txtSeedDate)
    If Nz(v, 0) > 0 Then
        Me.txtSeedDate = v
        ' if the time for this inspection order hasn't been set - set it to 8AM
        If DatePart("h", CDate(Me.txtSeedDate)) = 0 Then
            Me.txtSeedDate = DateAdd("h", 8, Me.txtSeedDate)
        End If
    End If
End Sub

Private Sub Form_KeyDown(KeyCode As Integer, Shift As Integer)
    If KeyCode = vbKeyEscape Then
        cmdCancel_Click
        KeyCode = 0
    End If
End Sub

Private Sub Form_Load()
    Dim Msg As String
    
    On Error GoTo PROC_ERR
    'SnapShot
    CompanyCodeStr = mdlCompany.GetCompanyCode
    Me.lblCompanyCode.Caption = CompanyCodeStr
    mdlEnable.ReturnValue = 0
        
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    If err.Number <> 0 Then
        Msg = ModuleName & " Form_Load" & vbCrLf & _
              "Error # " & CStr(err.Number) & " was generated by " & err.Source & vbCrLf & err.Description
        MsgBox Msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
    
End Sub

Private Sub Form_Open(Cancel As Integer)
    Dim v As Variant
    Dim Msg As String
    Dim s As String
    Dim aCustSiteID As Long

    On Error GoTo PROC_ERR
    
    If Len(Me.OpenArgs) > 0 Then
        v = mdlOpenArgs.AssertParseOpenArgs(Me.OpenArgs, 0)
        If Nz(v, 0) > 0 Then
            aCustSiteID = CLng(v)
        Else
            Cancel = True
            Exit Sub
        End If
        
        ' filter the recordset on SiteID
        Me.Filter = "[CustSiteID] = " & CStr(aCustSiteID)
        If Me.FilterOn = False Then Me.FilterOn = True
        Me.Requery
        Me.txtSeedDate = Me![SeedDate]
        Me.txtSeedLevel = Me![SeedLevel]

    End If

PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        Msg = ModuleName & " Form_Open" & vbCrLf & _
              "Error # " & CStr(err.Number) & " was generated by " & err.Source & vbCrLf & err.Description
        MsgBox Msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
    
End Sub






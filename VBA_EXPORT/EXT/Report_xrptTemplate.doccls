Option Compare Database
'@Folder "TEMPLATES"
Option Explicit
Const ModuleName As String = "xrptTemplate"

Private mDateSeedS As Date
Private mDateSeedE As Date
Private lngID As Variant

Private Sub Report_Activate()
    Dim msg As String
    Dim s As String
    Dim i As Integer

    On Error GoTo PROC_ERR
    If Me.CurrentView = 6 Then

        '
        '        Me.Filter = "(" & _
        '        "(([Arrival] >= #" & Format(mDateSeedS, "mm/dd/yyyy") & "# AND [Arrival] <= #" & Format(mDateSeedE, "mm/dd/yyyy hh:nn") & "#)) )"
        '        Me.FilterOn = True

        '        Me.Filter = _
        '                  "( " & _
        '                  "([Start] >= #" & Format(mDateSeedS, "mm/dd/yyyy") & "#) " & _
        '                  " AND " & _
        '                  "([End] < #" & Format(mDateSeedE, "mm/dd/yyyy hh:nn") & "#)" & _
        '                  ")"
        '        If Not IsNull(lngID) Then
        '            i = CInt(lngID)
        '            If i > 0 Then
        '                Me.Filter = Me.Filter & " AND ([ID] = " & cstr(lngID) & ")"
        '            End If
        '        End If
        '        Me.FilterOn = True
    End If
    
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = Me.Name & "Report_Activate" & vbCrLf & _
              "Error" & CStr(err.Number) & " was generated by " & err.SOURCE & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
End Sub

Private Function ParseText(TextIn As String, X As Variant) As Variant
    On Error Resume Next
    Dim Var As Variant
    Var = Split(TextIn, "|", -1)
    ParseText = Var(X)
End Function

Private Sub Report_Load()
    Dim v As Variant
    Dim msg As String
    Dim d As Date

    On Error GoTo PROC_ERR
    
    lblCompanyCode.Caption = mdlCompany.GetCompanyCode
    ' lblCompanyName.Caption = mdlCompany.GetCompanyName()

    If Not IsNull(Me.OpenArgs) And Len(Me.OpenArgs > 0) Then
        v = mdlOpenArgs.AssertParseOpenArgs(Me.OpenArgs, 0)
        If Nz(v, 0) > 0 Then
            mDateSeedS = CDate(v)
        End If
        v = mdlOpenArgs.AssertParseOpenArgs(Me.OpenArgs, 1)
        If Nz(v, 0) > 0 Then
            mDateSeedE = CDate(v)
        End If
        '        v = mdlOpenArgs.AssertParseOpenArgs(Me.OpenArgs, 2)
        '        If Nz(v, 0) > 0 Then
        '            mOrderBy = CStr(v)
        '        End If
    End If
    
    Me.txtDateStart.Caption = Format(mDateSeedS, "Long Date")
    Me.txtDateEnd.Caption = Format(mDateSeedE, "Long Date")

        
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = Me.Name & " Report_Load" & vbCrLf & _
              "Error # " & CStr(err.Number) & " was generated by " & err.SOURCE & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
End Sub


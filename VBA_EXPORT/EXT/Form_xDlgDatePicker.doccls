
' +-----------------------------------------------------------
' |
' |  Form_DatePicker
' |

' This modal dialog box prompts for a date. See documentation
' in mdlPRG_Picker_Date.

Option Compare Database
'@Folder "PICKER"
Option Explicit

Private myDate As Date     ' current date
Private myYear As Integer  ' current year
Private myMonth As Integer ' current month
Private myDay As Integer   ' current day of month
Private cmdCurrentDay As CommandButton ' day button corresponding to myDay
Private Const DoHighLightInterval As Boolean = True

' +-----------------------------------------------------------
' |
' |  methods to handle opening and closing
' |

Private Sub Form_Open(Cancel As Integer)
Dim msg As String
On Error GoTo PROC_ERR

' initialize null return value
mdlDateTime.ReturnValue = Null


' set dialog box caption
Me.Caption = mdlDateTime.Prompt

' if there is a valid date to initialize to, use it.
' otherwise, default to current date
If IsDate(mdlDateTime.InitDate) Then
    myDate = mdlDateTime.InitDate
Else
    myDate = Date
End If

' Set myYear, myMonth, and myDay according to myDate and
' draw calendar grid.
DateToElements

' If possible, set focus on the date button corresponding
' to myDay.
If Not cmdCurrentDay Is Nothing Then cmdCurrentDay.SetFocus

PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = "xDlgDatePicker PROC: Form_Open Error # " & CStr(err.Number) & " was generated by " & err.SOURCE & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT

End Sub

' Set return value and close dialog box (allow calling
' procedure to continue.
Private Sub Done(Optional Cancel As Boolean = False)
Dim msg As String
On Error GoTo PROC_ERR
    If Not Cancel Then
        mdlDateTime.ReturnValue = myDate
    End If
    Me.Visible = False
    
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = "xDlgDatePicker PROC: Done Error # " & CStr(err.Number) & " was generated by " & err.SOURCE & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT

End Sub

' Cancel button quits without returning a value
Private Sub cmdCancel_Click()
Done Cancel:=True
End Sub


' +-----------------------------------------------------------
' |
' |  house-keeping methods
' |

' This method is called when myDate has been changed. It
' reflects that change in myYear, myMonth, and myDay.
Private Sub DateToElements()
Dim msg As String
On Error GoTo PROC_ERR

    myYear = Year(myDate)
    myMonth = Month(myDate)
    myDay = Day(myDate)
    
    txtYear = myYear
    cboMonth = myMonth
    
    DrawDateButtons
    
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = "xDlgDatePicker PROC: DateToElements Error # " & CStr(err.Number) & " was generated by " & err.SOURCE & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
    
End Sub

' This method is called when myYear, myMonth, or myDay have
' been changed. It reflects that change in myDate.
Private Sub ElementsToDate()
myDate = DateSerial(myYear, myMonth, myDay)

DrawDateButtons
End Sub


Private Function HTMLConvert(strHTML As String) As Long
Dim msg As String
On Error GoTo PROC_ERR

    Rem converts a HTML color code number such as #D8B190 to an RGB value.
    HTMLConvert = RGB(CInt("&H" & Mid(strHTML, 2, 2)), CInt("&H" & Mid(strHTML, 4, 2)), CInt("&H" & Mid(strHTML, 6, 2)))
PROC_EXIT:
    On Error Resume Next
    Exit Function

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = "xDlgDatePicker PROC: HTMLConvert Error # " & CStr(err.Number) & " was generated by " & err.SOURCE & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
    
End Function


' This method draws the date buttons on the 7 x 6 grid.
Private Sub DrawDateButtons()
Dim MonthDayOne As Date, MonthLength As Integer, DayOfWeek As Integer
Dim i As Integer, Y As Integer, X As Integer, btn As CommandButton
Dim aArrival As Date, aDeparture As Date
Dim aDate As Date

Dim msg As String
On Error GoTo PROC_ERR

    ' first day of this month:
    MonthDayOne = DateSerial(myYear, myMonth, 1)
    ' day of week (Sun = 1) on which the first of the month falls:
    DayOfWeek = DatePart("w", MonthDayOne, vbSunday)
    ' length of this month:
    MonthLength = DatePart("d", DateAdd("d", -1, DateAdd("m", 1, MonthDayOne)))
    
    ' Initialize i to be what day of the month button (0, 0) will
    ' be on. If the first of the month is Sun, start with i = 1.
    ' If the first of the month is Mon or Tue, start with i = 0 or
    ' i = -1, respectively.
    
    ' y and x count the current row and column where we are on the
    ' grid.
    
    Set cmdCurrentDay = Nothing
    i = 2 - DayOfWeek
    For Y = 0 To 5
        For X = 0 To 6
            Set btn = Me.Controls("d" & Y & X)
            ' If i falls within legal days for this month, show
            ' this button.
            If (i >= 1) And (i <= MonthLength) Then
                btn.Caption = i
                btn.Tag = i
                btn.Visible = True
                btn.BackColor = HTMLConvert("#F2F2F2")
'                If DoHighLightInterval Then
'                    If mdlPRG_ToolBox.GetBookingInterval(aArrival, aDeparture) Then
'                        aDate = DateSerial(myYear, myMonth, i)
'                        If DateValue(aDate) >= DateValue(aArrival) And DateValue(aDate) <= DateValue(aDeparture) Then
'                            btn.BackColor = HTMLConvert("#F9B073") 'sort of pastey orange
'                        Else
'                            btn.BackColor = HTMLConvert("#F2F2F2")
'                        End If
'                        If i = myDay Then
'                            ' paint the border
'                            btn.BorderColor = HTMLConvert("#BA1419")
'                            btn.BorderWidth = 2
'                        Else
'                            btn.BorderColor = HTMLConvert("#000000")
'                            btn.BorderWidth = 0
'                        End If
'                    End If
'                End If
                
            ' If i isn't a legal day, hide this button.
            Else
                btn.Visible = False
            End If
            
            ' myDay - set focus on this button.
            If i = myDay Then
                ' paint the border
                btn.BorderColor = HTMLConvert("#BA1419")
                btn.BorderWidth = 2
                btn.BackColor = HTMLConvert("#F9B073") 'sort of pastey orange
            Else
                btn.BorderColor = HTMLConvert("#000000")
                btn.BorderWidth = 0
            End If
            
            If i = myDay Then Set cmdCurrentDay = btn
            ' Advance to next day.
            i = i + 1
        Next
    Next
    
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = "xDlgDatePicker PROC: DrawDateButtons Error # " & CStr(err.Number) & " was generated by " & err.SOURCE & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
    

End Sub


' +-----------------------------------------------------------
' |
' |  handle on on-screen year and month controls
' |

' Year control: previous button, textbox, and next button
Private Sub cmdPrevYear_Click()
myDate = DateAdd("yyyy", -1, myDate) 'go back one year
DateToElements
DoEvents
End Sub
Private Sub txtYear_AfterUpdate()
myYear = txtYear.Value
ElementsToDate
End Sub
Private Sub cmdNextYear_Click()
myDate = DateAdd("yyyy", 1, myDate) 'go forward one year
DateToElements
DoEvents
End Sub

' Month control: previous button, textbox, and next button
Private Sub cmdPrevMonth_Click()
myDate = DateAdd("m", -1, myDate) 'go back one month
DateToElements
DoEvents
End Sub
Private Sub cboMonth_AfterUpdate()
myMonth = cboMonth.Value
ElementsToDate
End Sub
Private Sub cmdNextMonth_Click()
myDate = DateAdd("m", 1, myDate) 'go forward one month
DateToElements
DoEvents
End Sub


' +-----------------------------------------------------------
' |
' |  handle the buttons on the calendar grid
' |

Private Sub DateClick(num As String)
Dim msg As String
On Error GoTo PROC_ERR
    myDay = Me.Controls("d" & num).Tag
    ElementsToDate
    Done ' return to the procedure that called the calendar form
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = "xDlgDatePicker PROC: DateClick Error # " & CStr(err.Number) & " was generated by " & err.SOURCE & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
End Sub

' date picker buttons
Private Sub d00_Click()
DateClick "00"
End Sub
Private Sub d01_Click()
DateClick "01"
End Sub
Private Sub d02_Click()
DateClick "02"
End Sub
Private Sub d03_Click()
DateClick "03"
End Sub
Private Sub d04_Click()
DateClick "04"
End Sub
Private Sub d05_Click()
DateClick "05"
End Sub
Private Sub d06_Click()
DateClick "06"
End Sub
Private Sub d10_Click()
DateClick "10"
End Sub
Private Sub d11_Click()
DateClick "11"
End Sub
Private Sub d12_Click()
DateClick "12"
End Sub
Private Sub d13_Click()
DateClick "13"
End Sub
Private Sub d14_Click()
DateClick "14"
End Sub
Private Sub d15_Click()
DateClick "15"
End Sub
Private Sub d16_Click()
DateClick "16"
End Sub
Private Sub d20_Click()
DateClick "20"
End Sub
Private Sub d21_Click()
DateClick "21"
End Sub
Private Sub d22_Click()
DateClick "22"
End Sub
Private Sub d23_Click()
DateClick "23"
End Sub
Private Sub d24_Click()
DateClick "24"
End Sub
Private Sub d25_Click()
DateClick "25"
End Sub
Private Sub d26_Click()
DateClick "26"
End Sub
Private Sub d30_Click()
DateClick "30"
End Sub
Private Sub d31_Click()
DateClick "31"
End Sub
Private Sub d32_Click()
DateClick "32"
End Sub
Private Sub d33_Click()
DateClick "33"
End Sub
Private Sub d34_Click()
DateClick "34"
End Sub
Private Sub d35_Click()
DateClick "35"
End Sub
Private Sub d36_Click()
DateClick "36"
End Sub
Private Sub d40_Click()
DateClick "40"
End Sub
Private Sub d41_Click()
DateClick "41"
End Sub
Private Sub d42_Click()
DateClick "42"
End Sub
Private Sub d43_Click()
DateClick "43"
End Sub
Private Sub d44_Click()
DateClick "44"
End Sub
Private Sub d45_Click()
DateClick "45"
End Sub
Private Sub d46_Click()
DateClick "46"
End Sub
Private Sub d50_Click()
DateClick "50"
End Sub
Private Sub d51_Click()
DateClick "51"
End Sub
Private Sub d52_Click()
DateClick "52"
End Sub
Private Sub d53_Click()
DateClick "53"
End Sub
Private Sub d54_Click()
DateClick "54"
End Sub
Private Sub d55_Click()
DateClick "55"
End Sub
Private Sub d56_Click()
DateClick "56"
End Sub
Option Compare Database
Option Explicit

Const ModuleName As String = "[SF_Site_Electrical]"
Const PKey As String = "[StationID]"
Const msgEmpty As String = "STATION IS EMPTY"

Private Property Get HasParent(ByRef f As Form) As Boolean
    HasParent = False
    On Error GoTo handler
    HasParent = TypeName(f.Parent.Name) = "String"
    Exit Property
handler:
End Property

Private Sub AssignStationNumber()
Dim dbs As DAO.Database
Dim rst As Recordset
Dim SQL As String
Dim msg As String

    On Error GoTo PROC_ERR
    
    SQL = _
    "SELECT dbo_Station.SiteID, Max(dbo_Station.StationNum) AS MaxOfStationNum " & _
    "FROM dbo_Station " & _
    "GROUP BY dbo_Station.SiteID, dbo_Station.CoreGroupID " & _
    "HAVING (((dbo_Station.SiteID)= " & CStr(Me.SiteID) & " ) AND ((dbo_Station.CoreGroupID)=2));"


    Set dbs = CurrentDb
    Set rst = dbs.OpenRecordset(SQL, dbOpenDynaset, dbFailOnError + dbSeeChanges)

    If rst.RecordCount = 0 Then
        Me![StationNum] = 1
    Else
        If Nz(rst![MaxOfStationNum], 0) = 0 Then
            Me![StationNum] = 1
        Else
            Me![StationNum] = rst![MaxOfStationNum] + 1
        End If
    End If
    
    
PROC_EXIT:
    Set rst = Nothing
    Set dbs = Nothing
    
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = ModuleName & " AssignStationNumber" & vbCrLf & _
              "Error # " & CStr(err.Number) & " was generated by " & err.Source & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT

End Sub

Public Sub EmptyCurrStation()
    ' set the station as empty
    If Me.Dirty Then Me.Dirty = False
    If Nz(Me.Controls(PKey), 0) > 0 Then
        Me![IsEmpty] = True
        Me![EquipmentID] = Null
        Me![Note] = msgEmpty
        Me.Refresh
    End If
End Sub


Private Sub Combo6_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
Dim aEquipmentID As Long
    If mdlKeyBoardState.IsControlKeyDown Then
        aEquipmentID = mdlPicker.PickEquip(2)
        If (aEquipmentID > 0) Then
            If (Nz(Me.SiteID, 0) > 0) Then
                ' use customer in dropdown
                Me.EquipmentID = aEquipmentID
                Me.Combo6.Requery
            ElseIf Me.NewRecord Then
                Me.Undo
                If (Nz(Me.SiteID, 0) = 0) Then
                    If HasParent(Me) Then
                        If Nz(Me.Parent.Form!SiteID, 0) > 0 Then
                            mdlSite.addNewSiteStation Me.Parent.Form!SiteID, aEquipmentID
                            mdlToolBox.RequeryFormAndKeepCurrSelectedRecord Me
                        End If
                    End If
                End If
            End If
        End If
    End If
End Sub

Private Sub Form_BeforeInsert(Cancel As Integer)
    Me.CreatedOn = Now()
    Me.CoreGroupID = 2
    If IsNull(Me![IsManaged]) Then
        Me.IsManaged = False
    End If
End Sub

Private Sub Form_BeforeUpdate(Cancel As Integer)
Dim v As Variant
    ' ASSERT
    If Nz(Me![CoreGroupID], 0) = 0 Then
        Me.CoreGroupID = 2
    End If
    
    ' set the station active - not empty
    If Nz(Me![EquipmentID], 0) > 0 Then
        Me![IsEmpty] = False
    End If
    
    If Me![IsEmpty] = True Then
        v = InStr(1, Me.Note, msgEmpty)
        If v = 0 Then
            Me.Note = msgEmpty & " " & Me.Note
        End If
    End If
    
    If Nz(Me![StationNum], 0) = 0 Then
        ' assign a station number
        AssignStationNumber
    End If
    
End Sub

Private Sub Form_Current()
    ' re-init PowerBoard combobox
    Dim SQL As String
    SQL = "SELECT dbo_PowerBoard.PowerBoardID, dbo_PowerBoard.PowerBoardNum FROM dbo_PowerBoard WHERE (((dbo_PowerBoard.SiteID)=" & CStr(Nz(Me.SiteID, 0)) & "));"
    Me.cbxPowerBoardID.RowSource = SQL
    Me.cbxPowerBoardID.Requery
End Sub

Private Sub Form_DblClick(Cancel As Integer)
    ' goto equipment
    If Nz(Me.EquipmentID, 0) > 0 Then
        If Me.Dirty Then Me.Dirty = False
        mdlGoto.GotoEquip Me.EquipmentID
    End If
End Sub

Private Sub LifeCycleSeed_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
Dim v As Variant
    If mdlKeyBoardState.IsControlKeyDown Then
        ' go get the date
        v = mdlDateTime.InputDate("Enter Life-Cycle Seed Date", Me.LifeCycleSeed)
        If Nz(v, 0) > 0 Then
            Me.LifeCycleSeed = v
        End If
    End If
End Sub

Private Sub Note_DblClick(Cancel As Integer)
    ' perform extended Parma
    If HasParent(Me.Form) Then
        If Me.Dirty Then Me.Dirty = False
        Me.Form.Parent.ExtendedParam "[SF_Site_Electrical]", "[StationID]"
    End If
End Sub

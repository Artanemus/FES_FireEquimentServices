Option Compare Database
Option Explicit

Const ModuleName As String = "SF_HR_Zone"
Const PKey As String = "[HRZoneID]"

Private Property Get HasParent(ByRef f As Form) As Boolean
    HasParent = False
    On Error GoTo handler
    HasParent = TypeName(f.Parent.Name) = "String"
    Exit Property
handler:
End Property

Private Sub cmdClearPostcode_Click()
'    Dim lngPK As Long
'    Dim intResponse As Integer
'    lngPK = Me.HRZoneID
'    If Nz(Me.[PostCodeID], 0) <> 0 Then
'        intResponse = MsgBox("Do you want to clear the postcode information " & _
'                             vbCrLf & "for the current selected HR Zone", _
'                             vbYesNo Or vbQuestion Or vbDefaultButton2, _
'                             cCode & " - Clear Postcode Information")
'
'        If intResponse = vbYes Then
'            Me.[PostCodeID] = Null
'            Me.Requery
'
'            'mdlToolBox.RequeryFormAndKeepCurrSelectedRecord Me.Form
'            '-------------------------------------------------
'            With Me.RecordsetClone
'                .FindFirst "[HRZoneIDID]=" & lngPK
'                If Not .NoMatch Then
'                    If Me.Dirty Then
'                        Me.Dirty = False
'                    End If
'                    Me.Bookmark = .Bookmark
'                End If
'            End With
'        End If
'    Else
'        Beep
'    End If
End Sub

Private Sub cmdAddZone_Click()
'    Dim aPostcodeID As Variant
'    Dim Msg As String
'    Dim success As Boolean
'    Dim aHRID As Variant
'
'    aPostcodeID = Null
'
'    On Error GoTo PROC_ERR
'
'    ' test for NULL site address
'    If Me.NewRecord Then
'        ' obtain the SiteID
'        If Me.Dirty Then
'            Me.Dirty = False
'        End If
'    End If
'
'    If HasParent(Me) Then
'        aHRID = Me.Parent.Form![HRID]
'        If Nz([aHRID], 0) > 0 Then
'            success = mdlHR.AddHRZone(aHRID)
'            If success Then
'                Me.Requery
'            End If
'        End If
'    Else
'        Beep
'    End If
'
'
'PROC_EXIT:
'    On Error Resume Next
'    Exit Sub
'
'PROC_ERR:
'    ' display the system error
'    If Err.Number <> 0 Then
'        Msg = ModuleName & " cmdGetPostcode_Click" & vbCrLf & _
'              "Error # " & cstr(Err.Number) & " was generated by " & Err.Source & vbCrLf & Err.Description
'        MsgBox Msg, , "Error", Err.HelpFile, Err.HelpContext
'    End If
'
'    Resume PROC_EXIT
    
End Sub

Private Sub cmdGetSuburb_Click()
'    Dim aPostcodeID As Variant
'    Dim Msg As String
'
'    aPostcodeID = Null
'
'    On Error GoTo PROC_ERR
'
'    ' test for NULL site address
'    If Me.NewRecord Then
'        ' obtain the SiteID
'        If Me.Dirty Then
'            Me.Dirty = False
'        End If
'    End If
'
'
'    If Nz([HRZoneID], 0) <> 0 Then
'        aPostcodeID = mdlPicker.PickSuburb()
'        If (Nz(aPostcodeID, 0) <> 0) Then
'            ' fill out the values in SF_Cust_Address
'            Me.[PostCodeID] = aPostcodeID
'            If Me.Dirty Then
'                Me.Dirty = False
'            End If
'        End If
'    End If
'
'PROC_EXIT:
'    On Error Resume Next
'    Exit Sub
'
'PROC_ERR:
'    ' display the system error
'    If Err.Number <> 0 Then
'        Msg = ModuleName & " cmdGetPostcode_Click" & vbCrLf & _
'              "Error # " & cstr(Err.Number) & " was generated by " & Err.Source & vbCrLf & Err.Description
'        MsgBox Msg, , "Error", Err.HelpFile, Err.HelpContext
'    End If
'
'    Resume PROC_EXIT
End Sub
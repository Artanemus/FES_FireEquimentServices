Option Compare Database
Option Explicit

Const MainFrm As String = "_Customer"
Const SubFrm As String = "SF_CustFind"
Const PKey As String = "[CustomerID]"
Const SearchFld As String = "[CustName]"
Const ModuleName As String = "CustFind"

' NOTES :
' --------------------------------------------------------------------------------------------------
' Me.ComboSuburb is now bound to [dbo_Postcode].[Suburb]
'   Looking up Me.ComboSuburb.Value - returns the value of the database field it is bound too.
'   Looking up Me.ComboSuburb.Text - returns the ASCII string held in the textbox of the ComboBox.
'   The filter now does a 'STRING SEARCH' on the dbo_Postcode.Suburb field rather than looking up the
'   dbo_Postcode.PostcodeID field (LONG)
'   This resolves exception erros that occur when the user 'freely' types into the combobox
' Set: Limit to list = NO
' Set: Allow value list edits = NO
' --------------------------------------------------------------------------------------------------
' USE THIS METHOD AS A BASE FOR MULTI - SEARCH PARAMETERS.



Private Sub cmdClearSuburb_Click()
    Me.ComboSuburb = vbNullString
    ParamChanged
    Me.Form(SubFrm).Form.CountRecords
End Sub

Private Sub ComboSuburb_Change()
Dim msg As String

    On Error GoTo PROC_ERR
        ParamChanged
        Me.Form(SubFrm).Form.CountRecords
    
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = ModuleName & " ComboSuburb_Change" & vbCrLf & _
              "Error # " & CStr(err.Number) & " was generated by " & err.Source & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
    
    
End Sub

Private Sub Form_Load()
    Me.lblCompanyCode.Caption = mdlCompany.GetCompanyCode()
End Sub

Private Sub Form_Open(Cancel As Integer)
    Me.txtTextBox = vbNullString
    Me.ComboSuburb = vbNullString
    If Me.txtTextBox.Visible Then Me.txtTextBox.SetFocus
End Sub

Private Sub Form_Activate()
    If Me.txtTextBox.Visible Then Me.txtTextBox.SetFocus
End Sub

Public Sub Child_Called_DlbClick(Cancel As Integer)
    Form_DblClick Cancel
End Sub

Private Sub Form_DblClick(Cancel As Integer)
    cmdGOTO_Click
End Sub

Private Sub cmdClear_Click()
    Me.txtTextBox = vbNullString
    If Me.txtTextBox.Visible Then Me.txtTextBox.SetFocus
    ParamChanged
End Sub

Private Sub cmdGOTO_Click()
Dim strCriteria As String
Dim rst As DAO.Recordset
Dim v As Variant
Dim msg As String

    On Error GoTo PROC_ERR
    
    v = Me.Form(SubFrm).Form!CustomerID
    If (Nz(v, 0) > 0) Then
        If Not IsLoaded(MainFrm) Then
            DoCmd.OpenForm MainFrm, acNormal
        End If
        Forms(MainFrm).FilterOn = False
        Set rst = Forms(MainFrm).RecordsetClone
        strCriteria = PKey & " = " & CStr(v)
        rst.FindFirst strCriteria
        If Not rst.NoMatch Then
            Forms(MainFrm).Bookmark = rst.Bookmark
            Forms(MainFrm).SetFocus
            Exit Sub
        Else
            MsgBox "NoMatch :: Unable to bookmark ID.", , "Error finding booking..."
        End If
        Set rst = Nothing
    Else
        Beep
    End If
    
PROC_EXIT:
    If Me.txtTextBox.Visible Then Me.txtTextBox.SetFocus
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = ModuleName & " cmdGOTO_Click" & vbCrLf & _
              "Error # " & CStr(err.Number) & " was generated by " & err.Source & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
    
    
End Sub

Private Sub txtTextBox_Change()
    ParamChanged
    Me.Form(SubFrm).Form.CountRecords
End Sub

Private Sub SetSF_FilterOff()
    If Me.Form(SubFrm).Form.FilterOn Then
        Me.Form(SubFrm).Form.FilterOn = False
    End If
End Sub

Private Sub ParamChanged()
    Dim msg As String
    ' variant - resolves NULL exceptions
    Dim aSearchStr As Variant
    Dim aSuburbStr As Variant
    
    
    On Error GoTo PROC_ERR
    
    
    If (Me.txtTextBox Is Me.ActiveControl) Then
        aSearchStr = Me.txtTextBox.Text
    Else
        aSearchStr = Me.txtTextBox.Value
    End If
    
    
    If (Me.ComboSuburb Is Me.ActiveControl) Then
        aSuburbStr = Me.ComboSuburb.Text
    Else
        aSuburbStr = Me.ComboSuburb.Value
    End If
    
    
    If ((Len(Nz(aSearchStr, vbNullString)) = 0) And (Len(Nz(aSuburbStr, vbNullString)) = 0)) Then
        lblSearchStatus.Caption = "Enter a search string."
        lblSearchStatus.Visible = True
        Me.Form(SubFrm).Form.Filter = vbNullString
        SetSF_FilterOff
        Exit Sub
    End If
        
    
    'just the search string
    If ((Len(Nz(aSearchStr, vbNullString)) > 0) And (Len(Nz(aSuburbStr, vbNullString)) = 0)) Then
        Me.Form(SubFrm).Form.Filter = SearchFld & " LIKE '%" & aSearchStr & "%'"
    ' both search string and equipment type
    ElseIf ((Len(Nz(aSearchStr, vbNullString)) > 0) And (Len(Nz(aSuburbStr, vbNullString)) > 0)) Then
        'Me.Form(SubFrm).Form.Filter = SearchFld & " LIKE '%" & aSearchStr & "%' AND [PostCodeID] = " & CStr(Me.ComboSuburb.Column(0))
        Me.Form(SubFrm).Form.Filter = "(" & SearchFld & " LIKE '%" & aSearchStr & "%') AND ([Suburb] LIKE '%" & aSuburbStr & "%')"
    Else
        ' just suburb type
        'Me.Form(SubFrm).Form.Filter = "[PostCodeID] = " & CStr(Nz(aSuburbStr.Column(0), 0))
        Me.Form(SubFrm).Form.Filter = "[Suburb] LIKE '%" & aSuburbStr & "%'"
    End If
    
    If Me.Form(SubFrm).Form.FilterOn = False Then
        Me.Form(SubFrm).Form.FilterOn = True
    End If
    
    ' no errors ... assert visibility
    lblSearchStatus.Visible = False
    
PROC_EXIT:
    
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = "mdlCustFind ParamChanged" & vbCrLf & _
              "Error # " & CStr(err.Number) & " was generated by " & err.Source & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
    
    
End Sub






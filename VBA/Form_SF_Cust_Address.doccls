Option Compare Database
Option Explicit

Const ModuleName As String = "SF_CustAddress"
Const PKey As String = "[CustAddressID]"


Private Sub cmdClearPostcode_Click()
    Dim lngPK As Long
    Dim intResponse As Integer
    Dim cCode As String
    
    lngPK = Me.CustAddressID
    If Nz(Me.[CustAddressID], 0) <> 0 Then
        If Nz(Me.[PostCodeID], 0) <> 0 Then
            cCode = mdlCompany.GetCompanyCode
            intResponse = MsgBox("Do you want to clear the postcode information " & _
                                 vbCrLf & "for the current selected Customer Address", _
                                 vbYesNo Or vbQuestion Or vbDefaultButton2, _
                                 cCode & " - Clear Postcode Information")
           
            If intResponse = vbYes Then
                Me.[PostCodeID] = Null
                Me.Requery
        
                'mdlToolBox.RequeryFormAndKeepCurrSelectedRecord Me.Form
                '-------------------------------------------------
                With Me.RecordsetClone
                    .FindFirst "[CustAddressID]=" & lngPK
                    If Not .NoMatch Then
                        If Me.Dirty Then
                            Me.Dirty = False
                        End If
                        Me.Bookmark = .Bookmark
                    End If
                End With
            End If
        Else
            Beep
        End If
    End If
End Sub

Private Sub cmdGetPostcode_Click()
    Dim aPostCodeID As Variant
    Dim msg As String
    Dim cCode As String
    
    aPostCodeID = Null
    
    On Error GoTo PROC_ERR
    
    ' test for NULL site address
    If Me.NewRecord Then
        'Me.SetFocus Me.Address
'        If Len(Nz(Me.Address.Value, "")) = 0 Then
'            cCode = mdlCompany.GetCompanyCode
'            MsgBox "An address must be given before a postcode." & vbCrLf & _
'                    "can be assigned", _
'                    vbOKOnly Or vbInformation Or vbDefaultButton1, _
'                    cCode & " - Missing Address."
'            GoTo PROC_EXIT
'        End If
        ' obtain the SiteID
        If Me.Dirty Then
            Me.Dirty = False
        End If
    End If
    
    If Nz([CustAddressID], 0) <> 0 Then
        aPostCodeID = mdlPicker.PickPostcode()
        If (Nz(aPostCodeID, 0) <> 0) Then
            ' fill out the values in SF_Cust_Address
            Me.[PostCodeID] = aPostCodeID
            If Me.Dirty Then
                Me.Dirty = False
            End If
        End If
    End If
    
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = "cmdGetPostcode_Click" & vbCrLf & _
              "Error # " & CStr(err.Number) & " was generated by " & err.Source & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    
    Resume PROC_EXIT
    
End Sub



Private Sub cmdGetSuburb_Click()
    Dim aPostCodeID As Variant
    Dim msg As String
    Dim cCode As String
    
    aPostCodeID = Null
    
    On Error GoTo PROC_ERR
    
    ' test for NULL site address
    If Me.NewRecord Then
        ' obtain the SiteID
        If Me.Dirty Then
            Me.Dirty = False
        End If
        'Me.SetFocus Me.Address
'        If Len(Nz(Me.Address.Value, "")) = 0 Then
'            cCode = mdlCompany.GetCompanyCode
'            MsgBox "An address must be given before a suburb." & vbCrLf & _
'                    "can be assigned", _
'                    vbOKOnly Or vbInformation Or vbDefaultButton1, _
'                    cCode & " - Missing Suburb."
'            GoTo PROC_EXIT
'        End If
    End If
    
    If Nz([CustAddressID], 0) <> 0 Then
        aPostCodeID = mdlPicker.PickSuburb()
        If (Nz(aPostCodeID, 0) <> 0) Then
            ' fill out the values in SF_Cust_Address
            Me.[PostCodeID] = aPostCodeID
            If Me.Dirty Then
                Me.Dirty = False
            End If
        End If
    End If
    
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = "cmdGetPostcode_Click" & vbCrLf & _
              "Error # " & CStr(err.Number) & " was generated by " & err.Source & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    
    Resume PROC_EXIT
    
End Sub

Private Sub Form_BeforeInsert(Cancel As Integer)
    ' set the creation date for this customer
'    If Nz(Me![CreatedOn], 0) = 0 Then
'        Me![CreatedOn] = Now()
'    End If
    If IsNull(Me![CreatedOn]) Then
        Me![CreatedOn] = Now()
    End If

    If IsNull(Me![IsArchived]) Then
        Me![IsArchived] = False
    End If
    
End Sub

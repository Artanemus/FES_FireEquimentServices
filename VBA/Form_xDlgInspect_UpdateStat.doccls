Option Compare Database
Option Explicit

Const ModuleName As String = "xTemplate_Dlg"
Private CompanyCodeStr As String


Private Sub cmdCancel_Click()
    ' mdl#.ReturnValue = vbNull
    Me.Visible = False
End Sub

Private Sub cmdOK_Click()
Dim msg As String
    
    On Error GoTo PROC_ERR
    Me.Visible = False
    ' mdl#.ReturnValue = vbNull
    
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If Err.Number <> 0 Then
        msg = ModuleName & " cmdOK_Click" & vbCrLf & _
              "Error # " & CStr(Err.Number) & " was generated by " & Err.Source & vbCrLf & Err.Description
        MsgBox msg, , "Error", Err.HelpFile, Err.HelpContext
    End If
    Resume PROC_EXIT
    
End Sub



Private Sub Form_KeyDown(KeyCode As Integer, Shift As Integer)
    If KeyCode = vbKeyEscape Then
        cmdCancel_Click
        KeyCode = 0
    End If
End Sub

Private Sub Form_Load()
Dim msg As String
    
    On Error GoTo PROC_ERR
    
    CompanyCodeStr = mdlCompany.GetCompanyCode
    Me.lblCompanyCode.Caption = CompanyCodeStr
        
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If Err.Number <> 0 Then
        msg = ModuleName & " Form_Load" & vbCrLf & _
              "Error # " & CStr(Err.Number) & " was generated by " & Err.Source & vbCrLf & Err.Description
        MsgBox msg, , "Error", Err.HelpFile, Err.HelpContext
    End If
    Resume PROC_EXIT
    
End Sub

Private Sub Form_Open(Cancel As Integer)
Dim v As Variant
Dim msg As String

    On Error GoTo PROC_ERR
    
'    TotCount = 0
'    SiteDisabled = 0
'    SiteEnabled = 0
'    Processed = 0
'    NewCustCount = 0
'    NewInspectOrderCount = 0
'    ErrCount = 0
'    Skipped = 0
    
'    aOpenArgs = CStr(TotCount) & "|" & CStr(SiteDisabledCount) & "|" & CStr(SiteEnabledCount) & "|" & CStr(ReadyToProcess) & "|" & _
'    CStr(NewCustCount) & "|" & CStr(NewInspectOrderCount) & "|" & CStr(ErrCount) & "|" & CStr(SkipWIPCount) & "|" & CStr(WarnCount)
    
    
    If Len(Me.OpenArgs) > 0 Then
        v = mdlOpenArgs.AssertParseOpenArgs(Me.OpenArgs, 0) ' total Count of all customer site links
        If Nz(v, 0) > 0 Then
            Me.Text01 = CLng(v)
        End If
        v = mdlOpenArgs.AssertParseOpenArgs(Me.OpenArgs, 1) ' customer sites links that are disabled
        If Nz(v, 0) > 0 Then
            Me.Text02 = CLng(v)
        End If
        v = mdlOpenArgs.AssertParseOpenArgs(Me.OpenArgs, 2) ' customer sites links that are enabled
        If Nz(v, 0) > 0 Then
            Me.Text03 = CLng(v)
        End If
        v = mdlOpenArgs.AssertParseOpenArgs(Me.OpenArgs, 3) ' Ready to process (inspection order is cancelled or completed)
        If Nz(v, 0) > 0 Then
            Me.Text04 = CLng(v)
        End If
        v = mdlOpenArgs.AssertParseOpenArgs(Me.OpenArgs, 4) ' NEW CUSTOMERS COUNTED
        If Nz(v, 0) > 0 Then
            Me.Text05 = CLng(v)
        End If
        v = mdlOpenArgs.AssertParseOpenArgs(Me.OpenArgs, 5) ' NEW ORDERS CREATED
        If Nz(v, 0) > 0 Then
            Me.Text06 = CLng(v)
        End If
        v = mdlOpenArgs.AssertParseOpenArgs(Me.OpenArgs, 6) ' Aborted creation - Error counted
        If Nz(v, 0) > 0 Then
            Me.Text07 = CLng(v)
        End If
        v = mdlOpenArgs.AssertParseOpenArgs(Me.OpenArgs, 7) ' Skipped - work still in progress.
        If Nz(v, 0) > 0 Then
            Me.Text08 = CLng(v)
        End If
        v = mdlOpenArgs.AssertParseOpenArgs(Me.OpenArgs, 8) ' Warnings
        If Nz(v, 0) > 0 Then
            Me.Text09 = CLng(v)
        End If
    End If

PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If Err.Number <> 0 Then
        msg = ModuleName & " Form_Open" & vbCrLf & _
              "Error # " & CStr(Err.Number) & " was generated by " & Err.Source & vbCrLf & Err.Description
        MsgBox msg, , "Error", Err.HelpFile, Err.HelpContext
    End If
    Resume PROC_EXIT
    
End Sub
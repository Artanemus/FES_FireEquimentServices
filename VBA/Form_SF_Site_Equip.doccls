Option Compare Database
Option Explicit

Const ModuleName As String = "[SF_Site_Equip]"
Const PKey As String = "[StationID]"
Const msgEmpty As String = "STATION IS EMPTY"

Private Property Get HasParent(ByRef f As Form) As Boolean
    HasParent = False
    On Error GoTo handler
    HasParent = TypeName(f.Parent.Name) = "String"
    Exit Property
handler:
End Property

Private Sub AssignStationNumber()
Dim db As DAO.Database
Dim rs As Recordset
Dim sql As String
Dim msg As String

    On Error GoTo PROC_ERR
       
    sql = _
    "SELECT dbo_Station.SiteID, Max(dbo_Station.StationNum) AS MaxOfStationNum " & _
    "FROM dbo_Station " & _
    "GROUP BY dbo_Station.SiteID, dbo_Station.StationTypeID " & _
    "HAVING (((dbo_Station.SiteID)= " & CStr(Me.SiteID) & " ) AND ((dbo_Station.StationTypeID)=1));"


    Set db = CurrentDb
    Set rs = db.OpenRecordset(sql, dbOpenDynaset, dbFailOnError + dbSeeChanges)

    If rs.RecordCount = 0 Then
        Me.StationNum = 1
    Else
        If Nz(rs![MaxOfStationNum], 0) = 0 Then
            Me.StationNum = 1
        Else
            Me.StationNum = rs![MaxOfStationNum] + 1
        End If
    End If
    
    
PROC_EXIT:
    Set rs = Nothing
    Set db = Nothing
    
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If Err.Number <> 0 Then
        msg = ModuleName & " AssignStationNumber" & vbCrLf & _
              "Error # " & CStr(Err.Number) & " was generated by " & Err.Source & vbCrLf & Err.Description
        MsgBox msg, , "Error", Err.HelpFile, Err.HelpContext
    End If
    Resume PROC_EXIT

End Sub

Public Sub EmptyCurrStation()
    ' set the station as empty
    If Me.Dirty Then Me.Dirty = False
    
'    If Nz(Me.StationNum, 0) = 0 Then
         ' assign a station number
'        AssignStationNumber
'    End If
    
    If Nz(Me.Controls(PKey), 0) > 0 Then
        Me.IsEmpty = True
        Me.EquipmentID = Null
        Me.Note = msgEmpty
        Me.Refresh
    End If
End Sub



Private Sub Combo6_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
Dim aEquipmentID As Long
    If mdlKeyBoardState.IsControlKeyDown Then
        aEquipmentID = mdlPicker.PickEquip(1)
        If (aEquipmentID > 0) Then
            If (Nz(Me.SiteID, 0) > 0) Then
                ' use customer in dropdown
                Me.EquipmentID = aEquipmentID
                Me.Combo6.Requery
            ElseIf Me.NewRecord Then
                Me.Undo
                If (Nz(Me.SiteID, 0) = 0) Then
                    If HasParent(Me) Then
                        If Nz(Me.Parent.Form!SiteID, 0) > 0 Then
                            mdlSite.addNewSiteStation Me.Parent.Form!SiteID, aEquipmentID
                            mdlToolBox.RequeryFormAndKeepCurrSelectedRecord Me
                        End If
                    End If
                End If
            End If
        End If
    End If
End Sub

Private Sub Form_BeforeInsert(Cancel As Integer)
    ' set the creation date for this customer
'    If Nz(Me![CreatedOn], 0) = 0 Then
'        Me![CreatedOn] = Now()
'    End If
    If IsNull(Me![CreatedOn]) Then
        Me![CreatedOn] = Now()
    End If
    If Nz(Me![StationTypeID], 0) = 0 Then
        Me![StationTypeID] = 1
    End If

' NOT ARCHIVED
'    If IsNull(Me![IsArchived]) Then
'        Me![IsArchived] = False
'    End If
    
End Sub

Private Sub Form_BeforeUpdate(Cancel As Integer)
Dim v As Variant
    ' ASSERT
    If Nz(Me![StationTypeID], 0) = 0 Then
        Me![StationTypeID] = 2
    End If

    ' set the station active - not empty
    If Nz(Me![EquipmentID], 0) > 0 Then
        Me![IsEmpty] = False
    End If
    If Me![IsEmpty] = True Then
        v = InStr(1, Me.Note, msgEmpty)
        If v = 0 Then
            Me.Note = msgEmpty & " " & Me.Note
        End If
    End If
    If Nz(Me![StationNum], 0) = 0 Then
        ' assign a station number
        AssignStationNumber
    End If
End Sub

Private Sub Form_DblClick(Cancel As Integer)
    ' goto equipment
    If Nz(Me.EquipmentID, 0) > 0 Then
        If Me.Dirty Then Me.Dirty = False
'        If Nz(Me.StationNum, 0) = 0 Then
            ' assign a station number
'            AssignStationNumber
'        End If
        mdlGoto.GotoEquip Me.EquipmentID
    End If
End Sub


Private Sub LifeCycleSeed_MouseUp(Button As Integer, Shift As Integer, X As Single, Y As Single)
Dim v As Variant
    If mdlKeyBoardState.IsControlKeyDown Then
        ' go get the date
        v = mdlDateTime.InputDate("Enter Life-Cycle Seed Date", Me.LifeCycleSeed)
        If Nz(v, 0) > 0 Then
            Me.LifeCycleSeed = v
        End If
    End If
End Sub

Private Sub Note_DblClick(Cancel As Integer)
'Dim msg As String
'
'    On Error GoTo PROC_ERR
'    ' perform extended Parma
'    If HasParent(Me.Form) Then
'        If Me.Dirty Then Me.Dirty = False
''        If Nz(Me.StationNum, 0) = 0 Then
'            ' assign a station number
''            AssignStationNumber
''        End If
'        Me.Form.Parent.ExtendedParam "[SF_Site_Equip]", "[StationID]"
'    End If
'
'PROC_EXIT:
'    On Error Resume Next
'    Exit Sub
'
'PROC_ERR:
'    ' display the system error
'    If Err.Number <> 0 Then
'        msg = ModuleName & " Note_DblClick" & vbCrLf & _
'              "Error # " & cstr(Err.Number) & " was generated by " & Err.Source & vbCrLf & Err.Description
'        MsgBox msg, , "Error", Err.HelpFile, Err.HelpContext
'    End If
'    Resume PROC_EXIT
End Sub

Option Compare Database
Option Explicit
Private aInspectionOrderID As Long
Const ModuleName As String = "xDlgInspect_Status"


Private Sub cmdCancel_Click()
    mdlSite.ReturnValue = vbNull
    Me.Undo
    Me.Visible = False
End Sub

Private Sub cmdOK_Click()
Dim msg As String
    
    On Error GoTo PROC_ERR
    
    If (Nz(Me![InspectionStatusID], 0) <> 0) Then
        mdlInspection.ReturnValue = Me![InspectionStatusID]
        Me.Visible = False
    Else
        mdlSite.ReturnValue = vbNull
        Me![InspectionStatusID] = Null
        Me.Visible = False
    End If
    
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = ModuleName & " cmdOK_Click" & vbCrLf & _
              "Error # " & CStr(err.Number) & " was generated by " & err.Source & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
    
End Sub



Private Sub Form_KeyDown(KeyCode As Integer, Shift As Integer)
    If KeyCode = vbKeyEscape Then
        cmdCancel_Click
        KeyCode = 0
    End If
End Sub

Private Sub Form_Load()
Dim v As Variant
Dim s As Variant
Dim msg As String
    
    On Error GoTo PROC_ERR
    
    aInspectionOrderID = 0
    v = DLookup("[CompanyCode]", "dbo_CompanyInfo", "[CompanyInfoID] = 1")
    If Not IsNull(v) Then
        Me.lblCompanyCode.Caption = CStr(v)
    Else
        Me.lblCompanyCode.Caption = "FES"
    End If
    
    
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = ModuleName & " Form_Load" & vbCrLf & _
              "Error # " & CStr(err.Number) & " was generated by " & err.Source & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
    
End Sub

Private Sub Form_Open(Cancel As Integer)
Dim v As Variant
Dim msg As String
Dim cCode As String

    On Error GoTo PROC_ERR
    
    If Len(Me.OpenArgs) > 0 Then
        aInspectionOrderID = mdlOpenArgs.AssertParseOpenArgs(Me.OpenArgs, 0)
    End If
    If aInspectionOrderID > 0 Then
        Me.Filter = "[InspectionOrderID] = " & CStr(aInspectionOrderID)
        If Me.FilterOn = False Then Me.FilterOn = True
    Else
        '
        msg = "An invalid InspectionOrderID was passed in OpenArgs" & vbCrLf & _
              "The dialogue will exit."
        cCode = mdlCompany.GetCompanyCode
        MsgBox msg, VbMsgBoxStyle.vbOKOnly Or VbMsgBoxStyle.vbCritical, cCode & " Error"
        
        ' forces the form to close
        Cancel = True
    End If

PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = ModuleName & " Form_Open" & vbCrLf & _
              "Error # " & CStr(err.Number) & " was generated by " & err.Source & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
    
End Sub
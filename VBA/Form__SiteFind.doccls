Option Compare Database
Option Explicit

Const MainFrm As String = "_Site"
Const SubFrm As String = "SF_SiteFind"

Const PKey As String = "[SiteID]"
'Const SearchFld As String = "[xAddress]"

Const ModuleName As String = "SiteFind"

Private Sub cmdClearCustomer_Click()
    Me.txtCustomer = vbNullString
    ParamChanged
    Me.Form(SubFrm).Form.CountRecords
End Sub

Private Sub cmdClearSuburb_Click()
    Me.ComboSuburb = vbNullString
    ParamChanged
    Me.Form(SubFrm).Form.CountRecords
End Sub

Private Sub txtCustomer_Change()
        ParamChanged
        Me.Form(SubFrm).Form.CountRecords
End Sub

Private Sub ComboSuburb_Change()
        ParamChanged
        Me.Form(SubFrm).Form.CountRecords
End Sub

Private Sub Form_Load()
Dim v As Variant
    v = DLookup("[CompanyCode]", "dbo_CompanyInfo", "[CompanyInfoID] = 1")
    If Not IsNull(v) Then
        Me.lblCompanyCode.Caption = CStr(v)
    Else
        Me.lblCompanyCode.Caption = "FES"
    End If

End Sub

Private Sub Form_Open(Cancel As Integer)
    txtTextBox = vbNullString
    Me.ComboSuburb = vbNullString
    If Me.txtTextBox.Visible Then Me.txtTextBox.SetFocus
End Sub

Private Sub Form_Activate()
    If Me.txtTextBox.Visible Then Me.txtTextBox.SetFocus
End Sub

Public Sub Child_Called_DlbClick(Cancel As Integer)
    Form_DblClick Cancel
End Sub

Private Sub Form_DblClick(Cancel As Integer)
    cmdGOTO_Click
End Sub

Private Sub cmdClear_Click()
    Me.txtTextBox = vbNullString
    If Me.txtTextBox.Visible Then Me.txtTextBox.SetFocus
    ParamChanged
End Sub

Private Sub cmdGOTO_Click()
Dim strCriteria As String
Dim rst As DAO.Recordset
Dim v As Variant

Dim msg As String
On Error GoTo PROC_ERR
    
    v = Me.Form(SubFrm).Form.Controls(PKey)
    If (Nz(v, 0) > 0) Then
        If Not IsLoaded(MainFrm) Then
            DoCmd.OpenForm MainFrm, acNormal
        End If
        Forms(MainFrm).FilterOn = False
        Set rst = Forms(MainFrm).RecordsetClone
        strCriteria = PKey & " = " & CStr(v)
        rst.FindFirst strCriteria
        If Not rst.NoMatch Then
            Forms(MainFrm).Bookmark = rst.Bookmark
            Forms(MainFrm).SetFocus
            Exit Sub
        Else
            MsgBox "NoMatch :: Unable to bookmark ID.", , "Error finding booking..."
        End If
        Set rst = Nothing
    Else
        Beep
    End If
    
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = ModuleName & " cmdGOTO_Click Error # " & CStr(err.Number) & " was generated by " & err.Source & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT

End Sub
    


Private Sub txtTextBox_Change()
    ParamChanged
    Me.Form(SubFrm).Form.CountRecords
End Sub

Private Sub SetSF_FilterOff()
    If Me.Form(SubFrm).Form.FilterOn Then
        Me.Form(SubFrm).Form.FilterOn = False
    End If
End Sub

Private Sub ParamChanged()
    Dim v As Variant, v2 As Variant
    Dim strSiteAddress As String
    Dim strSuburb As String
'    Dim lngCustomerID As Long
    Dim strCustomer As String
    Dim msg As String, s As String
    
    Dim strFilter As String
    
    On Error GoTo PROC_ERR
    
        
    If (Me.txtTextBox Is Me.ActiveControl) Then
        strSiteAddress = Me.txtTextBox.Text
    Else
        strSiteAddress = Me.txtTextBox.Value
    End If
    
    If (Me.ComboSuburb Is Me.ActiveControl) Then
        strSuburb = Me.ComboSuburb.Text
    Else
        strSuburb = Me.ComboSuburb.Value
    End If
    
    If (Me.txtCustomer Is Me.ActiveControl) Then
        strCustomer = Me.txtCustomer.Text
    Else
        strCustomer = Me.txtCustomer.Value
    End If
        
    If ((Len(Nz(strSiteAddress, vbNullString)) = 0) And (Len(Nz(strSuburb, vbNullString)) = 0) And (Len(Nz(strCustomer, vbNullString)) = 0)) Then
        lblSearchStatus.Caption = "Enter a search string."
        lblSearchStatus.Visible = True
        SetSF_FilterOff
        Exit Sub
    End If
    
    strFilter = vbNullString
    
    If (Len(Nz(strSiteAddress, vbNullString)) > 0) Then
        strFilter = strFilter & " AND [xAddress] LIKE '%" & strSiteAddress & "%'"
    End If
    
    If (Len(Nz(strSuburb, vbNullString)) > 0) Then
        strFilter = strFilter & " AND ([Suburb] LIKE '%" & strSuburb & "%')"
    End If
    
    If (Len(Nz(strCustomer, vbNullString)) > 0) Then
        strFilter = strFilter & " AND ([CustName] LIKE '%" & strCustomer & "%')"
    End If
    
    ' remove the prefixed " AND"
    strFilter = Mid$(strFilter, 5, Len(strFilter))

    s = Trim(strFilter)
    If Len(s) = 0 Then
        Me.Form(SubFrm).Form.FilterOn = False
    Else
        Me.Form(SubFrm).Form.Filter = strFilter
        If Me.Form(SubFrm).Form.FilterOn = False Then
            Me.Form(SubFrm).Form.FilterOn = True
        End If
    End If
    
    ' no errors ... assert visibility
    lblSearchStatus.Visible = False
    
    
PROC_EXIT:

    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = ModuleName & " ParamChanged" & vbCrLf & _
              "Error # " & CStr(err.Number) & " was generated by " & err.Source & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
    
    
End Sub






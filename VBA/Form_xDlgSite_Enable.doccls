Option Compare Database
Option Explicit

Const ModuleName As String = "xDlgSite_Enableable"
Private CompanyCodeStr As String
Private fOption2_Mode As Integer
Private fNextDT As Date
Private fNextLevel As Integer
Private fInspectionOrderID As Long

Private Sub cmdCancel_Click()
    mdlSite.ReturnValue = 0
    mdlSite.SeedDate = Empty
    mdlSite.SeedLevel = 0
    mdlSite.DoReseed = False
    mdlSite.Mode = 0
    Me.Visible = False
End Sub

Private Sub cmdOK_Click()
    Dim msg As String
    Dim cCode As String
    Dim v As Variant
    
    On Error GoTo PROC_ERR
    
    cCode = mdlCompany.GetCompanyCode
        
    Dim Results As Integer
    ' DO A RESEED OF RequestedDT and LevelNum
    If Frame107.value = 1 Then
        'ASSERT SEED DATE
        If Nz(Me.txtSeedDate, 0) = 0 Then
            msg = "A requested for date must be given." & vbCrLf & _
                  "(Required for this option.)."
            Results = MsgBox(msg, VbMsgBoxStyle.vbOKOnly Or VbMsgBoxStyle.vbExclamation Or VbMsgBoxStyle.vbDefaultButton1, _
                             cCode & " Error - No seed date")
            Exit Sub
        End If
        If IsDate(Me.txtSeedDate) = False Then
            msg = "An bad requested for date was entered." & vbCrLf & _
                  "(Required for this option.)."
            Results = MsgBox(msg, VbMsgBoxStyle.vbOKOnly Or VbMsgBoxStyle.vbExclamation Or VbMsgBoxStyle.vbDefaultButton1, _
                             cCode & " Error - Bad seed date")
            Exit Sub
        End If
        
        If DatePart("h", Me.txtSeedDate) = 0 Then
            msg = "Please include a time for the seed date." & vbCrLf & _
                  "(Required for this option.)."
            Results = MsgBox(msg, VbMsgBoxStyle.vbOKOnly Or VbMsgBoxStyle.vbExclamation Or VbMsgBoxStyle.vbDefaultButton1, _
                             cCode & " Error - No time given.")
            Exit Sub
        End If
    
        'ASSERT SeedLevel
        If Nz(Me.txtSeedLevel, 0) = 0 Then
            msg = "A valid seed level number must be given." & vbCrLf & _
                  "(Required for this option.)."
            Results = MsgBox(msg, VbMsgBoxStyle.vbOKOnly Or VbMsgBoxStyle.vbExclamation Or VbMsgBoxStyle.vbDefaultButton1, _
                             cCode & " Error - No seed level")
            Exit Sub
        End If
    
        If (Me.txtSeedLevel = 0 Or Me.txtSeedDate > mdlCompany.GetGlobalDefNumOfLevels) Then
            msg = "The seed numer is zero or greater than the 'Global NumofLevels'." & vbCrLf & _
                  "(Required for this option.)."
            Results = MsgBox(msg, VbMsgBoxStyle.vbOKOnly Or VbMsgBoxStyle.vbExclamation Or VbMsgBoxStyle.vbDefaultButton1, _
                             cCode & " Error - Illegal seed level")
            Exit Sub
        End If

    End If
    
    ' User selected default option - entered SeedDate and SeedLevel
    If Frame107.value = 1 Then
        mdlSite.SeedDate = Me.txtSeedDate
        mdlSite.SeedLevel = Me.txtSeedLevel
        mdlSite.InspectOrderID_Active = 0
        mdlSite.DoReseed = True
        mdlSite.Mode = 1
    Else
        If (fOption2_Mode = 1) Then
            ' PRE DATED - Set CustSite SeedDate and SeedLevel
            mdlSite.SeedDate = fNextDT
            mdlSite.SeedLevel = fNextLevel
            mdlSite.DoReseed = True
            mdlSite.InspectOrderID_Active = 0
            mdlSite.Mode = 1 ' RE_SEED
        ElseIf (fOption2_Mode = 2) Then
            ' POST DATE - Set inspection order active
            mdlSite.SeedDate = Empty
            mdlSite.SeedLevel = 0
            mdlSite.DoReseed = False
            mdlSite.InspectOrderID_Active = fInspectionOrderID
            mdlSite.Mode = 2 ' MAKE ACTIVE LAST INSPECTION ORDER
        Else
            msg = "The reference to the last inspection order failed." & vbCrLf & _
                  "Use option 1 as a work around this unexpected error."
            Results = MsgBox(msg, VbMsgBoxStyle.vbOKOnly Or VbMsgBoxStyle.vbExclamation Or VbMsgBoxStyle.vbDefaultButton1, _
                             cCode & " Error - Illegal Reference.")
            Exit Sub
        End If
    End If
    
    mdlSite.ReturnValue = 1
    Me.Visible = False
    
    
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error 2101, 3270,
    If err.Number <> 0 Then
        '        msg = ModuleName & " cmdOK_Click" & vbCrLf & _
        '              "Error # " & cstr(Err.Number) & " was generated by " & Err.Source & vbCrLf & Err.Description
        '        MsgBox msg, , "Error", Err.HelpFile, Err.HelpContext
    End If
    Resume PROC_EXIT
    
End Sub

Private Sub cmdSetDate_Click()
Dim v As Variant
    v = mdlDateTime.InputDate("Enter Inspection Requested for Date", Me.txtSeedDate)
    If Nz(v, 0) > 0 Then
        Me.txtSeedDate = v
        ' if the time for this inspection order hasn't been set - set it to 8AM
        If DatePart("h", Me.txtSeedDate) = 0 Then
            Me.txtSeedDate = DateAdd("h", 8, Me.txtSeedDate)
        End If
    End If
End Sub

Private Sub Form_KeyDown(KeyCode As Integer, Shift As Integer)
    If KeyCode = vbKeyEscape Then
        cmdCancel_Click
        KeyCode = 0
    End If
End Sub

Private Sub Form_Load()
    Dim msg As String
    
    On Error GoTo PROC_ERR
    'SnapShot
    CompanyCodeStr = mdlCompany.GetCompanyCode
    Me.lblCompanyCode.Caption = CompanyCodeStr
    mdlSite.ReturnValue = 0
    ' form_open inits this - fOption2_Mode = 0
    
PROC_EXIT:
    On Error Resume Next
    Exit Sub

PROC_ERR:
    If err.Number <> 0 Then
        msg = ModuleName & " Form_Load" & vbCrLf & _
              "Error # " & CStr(err.Number) & " was generated by " & err.Source & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
    
End Sub

Private Sub Form_Open(Cancel As Integer)
    Dim v As Variant
    Dim msg As String
    Dim s As String
    Dim aCustSiteID As Long
    Dim cls As clsUpdateToolBox
    Dim ErrState As Integer
    Dim WarnState As Integer
    Dim aLevelNum As Integer

    On Error GoTo PROC_ERR
    
    If Len(Me.OpenArgs) > 0 Then
        fOption2_Mode = 0
        fInspectionOrderID = 0
        Frame107.value = 1
    
        ' ArgCount - Base is 0
        ' CustSiteID
        ' -------------------------------------------------
        v = mdlOpenArgs.AssertParseOpenArgs(Me.OpenArgs, 0)
        If Nz(v, 0) > 0 Then
            
            aCustSiteID = CLng(v)
            ' find a valid NEXT RequestedDT
            Set cls = New clsUpdateToolBox
            cls.AssignLink aCustSiteID
            If Not IsEmpty(cls.SeedDate) Then
                v = DateDiff("m", cls.SeedDate, Date)
                If (Abs(v) > mdlCompany.GetGlobalDefServiceInterval) Then
                    ' outside accepted service range
                    ' a new seed date and seed level must be given
                    ' hide radio button - option 2
                    HideOption2
                Else
                    ' only cancelled or completed orders are accepted here.
                    If (cls.InspectionStatusID = 2) Or (cls.InspectionStatusID = 3) Then
                        ' DISPLAY the last inspection order RequestBy DateTime
                        txtLastInpectOrder.Caption = Format(cls.SeedDate, "dd/mm/yyyy  HH:nn")
                        ' DISPLAY the last inspection order status
                        ' NOTE: the caption 'CANCELLED' could be assigned here ... but this ensures that if the term is changed
                        ' or the language changes - then the caption is shown correctly
                        v = DLookup("[Caption]", "dbo_InspectionStatus", "[InspectionStatusID] = " & CStr(cls.InspectionStatusID))
                        If Nz(v, 0) > 0 Then
                            txtLastInspectOrderStatus.Caption = CStr(v)
                        Else
                            txtLastInspectOrderStatus.Caption = vbNullString
                        End If
                        
                        fNextDT = cls.CalcNextInspection(ErrState, WarnState, fNextLevel, False)
                        If ErrState = 0 Then
                            txtNextInspectOrder.Caption = Format(fNextDT, "dd/mm/yyyy  HH:nn")
                            txtNextLevelNum.Caption = CStr(fNextLevel)
                        Else
                            txtNextInspectOrder.Caption = "ERROR"
                            txtNextLevelNum.Caption = "ERROR"
                        End If
                        
                        ' inspection order PRE today
                        ' -------------------------------------------------------------------------------------
                        If (cls.SeedDate < Date) Then
                            fOption2_Mode = 1
                            lbl04.Caption = _
                                "FES has located the last inspection order and then calculated the next" & _
                                " inspection date and level. Selecting this option will" & _
                                " re-seed a new inspection order that uses these values."
                            
                        ' inspection order POST today
                        ' -------------------------------------------------------------------------------------
                        ElseIf (cls.SeedDate >= Date) Then
                            ' for POST dates we only accept cancelled orders ...
                            ' if the status is completed - then that would be a FES system error
                            ' TODO: catch this error
                            If (cls.InspectionStatusID = 3) Then
                                Me.lbl02.Visible = False
                                Me.lbl03.Visible = False
                                Me.txtNextInspectOrder.Visible = False
                                Me.txtNextLevelNum.Visible = False
                                fOption2_Mode = 2
                                fInspectionOrderID = cls.InspectionOrderID
                                lbl04.Caption = _
                                    "FES has located the last inspection order. Selecting this option will make this order active."
                            Else
                                ' LAST inspection order NOT CANCELLED
                                HideOption2
                            End If
                        End If
                        
                    Else
                        ' LAST inspection order NOT CANCELLED OR COMPLETED
                        HideOption2
                    End If
                End If
            Else
                ' ERROR?
            End If
            Set cls = Nothing
        Else
            Cancel = True
            Exit Sub
        End If
        
        ' filter the recordset on SiteID
        Me.Filter = "[CustSiteID] = " & CStr(aCustSiteID)
        If Me.FilterOn = False Then Me.FilterOn = True
        Me.Requery
        Me.txtSeedDate = Me![SeedDate]
        Me.txtSeedLevel = Me![SeedLevel]
                          
    End If

PROC_EXIT:
    Set cls = Nothing
    On Error Resume Next
    Exit Sub

PROC_ERR:
    ' display the system error
    If err.Number <> 0 Then
        msg = ModuleName & " Form_Open" & vbCrLf & _
              "Error # " & CStr(err.Number) & " was generated by " & err.Source & vbCrLf & err.Description
        MsgBox msg, , "Error", err.HelpFile, err.HelpContext
    End If
    Resume PROC_EXIT
    
End Sub

Private Sub HideOption2()
    Frame107.value = 1
    lbl00.Visible = False
    lbl01.Visible = False
    lbl02.Visible = False
    lbl03.Visible = False
    lbl04.Visible = False
    Option112.Visible = False
    txtLastInpectOrder.Visible = False
    txtLastInspectOrderStatus.Visible = False
    txtNextInspectOrder.Visible = False
    txtNextLevelNum.Visible = False
End Sub



